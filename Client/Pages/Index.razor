@page "/"
@inject HttpClient http
@inject NavigationManager navigationManager
@inject IJSRuntime JsRuntime
    <style>
        
        p{
            font-size:large;
            color:black
        }

       
    </style>
<h1 class="text-center"> Welcome to Cpresso Cafe </h1>
<div class="container">
    <div class="row">
        <div>
            <table>
                <tr>
                    <td colspan="3">
                        <img src="img/ultra_wide_coffee_coffee_beans_foam-23812.jpg" width="900" height="300" />
                    </td>

                </tr>
            </table>
        </div>
    </div>
    <br />
    <br />
    <div class="row"></div>
    <div class="row">
        <div class="col-md-7">
            <table>
                <tr>
                    <td>
                        <h6>
                            Cpresso is based in Gamla Stan, Stockholm.<br />
                            It was founded by six coffee enthusiasts and has grown to be a team of talented coffee professionals, with a wealth of experience and passion for what we do.<br />
                            Cpresso remains a gathering place for locals and a destination for guests from around the world, constantly experimenting with new ingredients and techniques.<br />
                            Yet we always stay true to our philosophy: Your Coffee, Your Way.
                        </h6>
                    </td>
                </tr>
            </table>
        </div>
        <div class="col-md-4 form-group">
            <table>
                <tr>
                    <td>
                        <EditForm Model="@user" OnValidSubmit="@Login">
                            <DataAnnotationsValidator />
                            <div class="align-content-center border">
                                <table class="table table-borderless">
                                    <tr>
                                        <td>
                                            <label>Email/User Name: </label>
                                        </td>
                                        <td>
                                            <InputText @bind-Value="@user.Email"></InputText>
                                            <ValidationMessage For="@(() => user.Email)" />
                                        </td>
                                    </tr>
                                    <tr>
                                        <td>
                                            <label>Password: </label>
                                        </td>
                                        <td>
                                            <InputText @bind-Value="@user.Password" type="password"></InputText>
                                            <ValidationMessage For="@(() => user.Password)" />
                                        </td>

                                    </tr>
                                    <tr>
                                        <td colspan="2">
                                            <button style="background-color :#a83d0c" type="submit" class="btn btn-primary">Login</button>
                                            <button style="background-color :#a83d0c" class="btn btn-primary" @onclick="Subscribe">Register</button>
                                        </td>


                                    </tr>

                                </table>
                            </div>
                        </EditForm>
                    </td>
                </tr>


            </table>

        </div>
    </div>

</div>
        @code {
            [CascadingParameter]
            public MainLayout Layout { get; set; }

            User user = new User();

            async Task Login()
            {

                try
                {

                    var loginUser = await http.GetFromJsonAsync<User>($"api/User?email={user.Email}&password={user.Password}");

                    if (loginUser == null)
                    {
                        await JsRuntime.InvokeVoidAsync("alert", "Wrong Email / Password !"); // Alert

                    }
                    else
                    {
                        Layout.Name = loginUser.Name;
                        navigationManager.NavigateTo("/products/" + loginUser.Name);
                    }
                }
                catch (Exception ex)
                {

                    await JsRuntime.InvokeVoidAsync("alert", "Wrong Email / Password !"); // Alert
                }
            }

            private void Subscribe()
            {

                try
                {


                    navigationManager.NavigateTo("/register");

                }
                catch (Exception ex)
                {


                }
            }

        }


